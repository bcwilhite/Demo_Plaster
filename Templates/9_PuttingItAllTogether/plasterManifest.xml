<?xml version='1.0' encoding='utf-8'?>
<plasterManifest
  schemaVersion='1.1'
  templateType='Project' xmlns='http://www.microsoft.com/schemas/PowerShell/Plaster/v1'>

  <metadata>
    <name>PuttingItAllTogether</name>
    <id>ad13f453-1042-41d1-9c6d-02752884be7a</id>
    <version>0.9.0</version>
    <title>Complete Module Scaffolding Template</title>
    <description>Used to set properties of a module manifest, create module files and folders.</description>
    <author>Brian Wilhite</author>
    <tags>Complete</tags>
  </metadata>

  <parameters>
    <parameter name='ModuleName' type='text' prompt='Name of your module' default='$PLASTER_DestinationName'/>
    <parameter name='ModuleDesc' type='text' prompt='Brief description of this module' default='TO BE DEFINED' />
    <parameter name='ModuleVersion' type='text' prompt='Version number' default='0.0.0.1' />
    <parameter name='ModuleAuthor' type='user-fullname' prompt='Author' store='text' />
    <parameter name='CompanyName' type='text' prompt='Company Name' store='text' />

    <parameter name='LocalizationTemplate' type='choice' prompt='Include localization folder and template?' default='0'>
      <choice label='&amp;Yes' help='Includes localization folder and templates' value='Yes' />
      <choice label='&amp;No' help='Does not include localization folder and  templates' value='No' />
    </parameter>

    <parameter name='FunctionTemplate' type='choice' prompt='Include Public/Private function templates?' default='0'>
      <choice label='&amp;Yes' help='Includes function templates' value='Yes' />
      <choice label='&amp;No' help='Does not include function templates' value='No' />
    </parameter>

    <parameter name='Disclaimer' type='choice' prompt='Insert Disclaimer Text?' default='0'>
      <choice label='&amp;Yes' help='Add disclaimer to module .psm1' value='Yes' />
      <choice label='&amp;No' help='Does not add a disclaimer module .psm1' value='No' />
    </parameter>

    <parameter name='Editor' type='choice' prompt='Select an editor for editor integration (or None):' default='1'>
      <choice label='&amp;None' help='No editor specified.' value='None' />
      <choice label='Visual Studio &amp;Code' help='Your editor is Visual Studio Code.' value='VSCode' />
    </parameter>

    <parameter name='ReadMeMd' type='choice' prompt='Include module README.md?' default='0'>
      <choice label='&amp;Yes' help='Add README.md to the Docs folder' value='Yes' />
      <choice label='&amp;No' help='Does not add README.md to the Docs folder' value='No' />
    </parameter>

    <parameter name='Pester' type='choice' prompt='Include Pester Tests?' default='0'>
      <choice label='&amp;Yes' help='Adds a pester folder' value='Yes' />
      <choice label='&amp;No' help='Does not add a pester folder' value='No' />
    </parameter>
  </parameters>

  <content>
    <message>&#10;&#10;Scaffolding your PowerShell Module...&#10;&#10;&#10;</message>

    <newModuleManifest destination='${PLASTER_PARAM_ModuleName}.psd1'
          moduleVersion='$PLASTER_PARAM_ModuleVersion'
          rootModule='${PLASTER_PARAM_ModuleName}.psm1'
          author='$PLASTER_PARAM_ModuleAuthor'
          description='$PLASTER_PARAM_ModuleDesc'
          companyName='$PLASTER_PARAM_CompanyName'
          encoding='UTF8-NoBOM'
          openInEditor='true' />

    <message>&#10;&#10;Creating folders for module: $PLASTER_PARAM_ModuleName</message>

    <file source='' destination='Classes\' />
    <file source='' destination='Public\' />
    <file source='' destination='Private\' />
    <file source='' destination='Release\' />
    <file source='' destination='Docs\' />

    <message condition='$PLASTER_PARAM_LocalizationTemplate -eq "Yes"'>&#10;&#10;Adding localization folder and template</message>
    <templateFile condition='$PLASTER_PARAM_LocalizationTemplate -eq "Yes"' source='localizationTemplate.strings.psd1' destination='Docs\en-US\localization.strings.psd1' />

    <message condition='$PLASTER_PARAM_FunctionTemplate -eq "Yes"'>&#10;&#10;Adding function templates</message>
    <templateFile condition='$PLASTER_PARAM_FunctionTemplate -eq "Yes"' source='functionTemplate.ps1' destination='Public\Verb-Noun.ps1' />
    <templateFile condition='$PLASTER_PARAM_FunctionTemplate -eq "Yes"' source='functionTemplate.ps1' destination='Private\Verb-Noun.ps1' />

    <message condition='$PLASTER_PARAM_Disclaimer -eq "Yes"'>&#10;&#10;Adding disclaimer module .psm1 </message>
    <message condition='$PLASTER_PARAM_Disclaimer -eq "No"'>&#10;&#10;Adding non-disclaimer module .psm1 </message>
    <templateFile source='moduleTemplate.psm1' destination='${PLASTER_PARAM_ModuleName}.psm1' />

    <message condition='$PLASTER_PARAM_Editor -eq "VSCode"'>&#10;&#10;Adding .vscode settings folder </message>
    <file condition='$PLASTER_PARAM_Editor -eq "VSCode"' source='Editor\VSCode\settings.json' destination='.vscode\settings.json' />
    <file condition='$PLASTER_PARAM_Editor -eq "VSCode"' source='Editor\VSCode\tasks.json' destination='.vscode\tasks.json' />

    <message condition='$PLASTER_PARAM_ReadMeMd -eq "Yes"'>&#10;&#10;Adding README.md to Docs folder </message>
    <templateFile condition='$PLASTER_PARAM_ReadMeMd -eq "Yes"' source='readMeTemplate.md' destination='Docs\en-US\README.md' />

    <message condition='$PLASTER_PARAM_Pester -eq "Yes"'>&#10;&#10;Creating a Tests folder </message>
    <templateFile condition='$PLASTER_PARAM_Pester -eq "Yes"' source='basicTest.ps1' destination='Tests\${PLASTER_PARAM_ModuleName}.tests.ps1' />

    <requireModule name='Pester'
                   minimumVersion='5.0.3'
                   message='Without Pester, you will not be able to run the provided Pester test to validate your module manifest file.`nWithout version 4.0.3, VS Code will not display Pester warnings and errors in the Problems panel.'/>

    <message>&#10;&#10;Your new PowerShell module project '$PLASTER_PARAM_ModuleName' has been created.</message>
    <message>A Pester test has been created to validate the module's manifest file.  Add additional tests to the test directory.</message>
    <message>You can run the Pester tests in your project by executing the 'test' task.  Press Ctrl+Shift+P, then type 'tasks test'.&#10;&#10;&#10;</message>

  </content>
</plasterManifest>
