<?xml version="1.0" encoding="utf-8"?>
<plasterManifest
  schemaVersion="1.1"
  templateType="Project" xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1">
  <metadata>
    <name>SetParamsBasedOnPrompts</name>
    <id>e3784c54-d5e1-40fe-b48b-2d9bec19478e</id>
    <version>0.0.4</version>
    <title>Foundation Folders, Function/Scripts and Localization Data Files with Choice Prompts</title>
    <description>Creates foundation folders, function/scripts and localization data files through choice prompts.</description>
    <author>Brian Wilhite</author>
    <tags>Foundation, Folders, Function, Scripts, Choice, Prompts</tags>
  </metadata>

  <parameters>
    <!--The type attribute has five possible values; text, choice, multichoice, user-fullname, user-email-->
    <parameter name='LocalizationTemplate' type='choice' prompt='Include localization folder and template?' default='0'>
      <choice label='&amp;Yes' help='Includes localization folder and templates' value='Yes' />
      <choice label='&amp;No' help='Does not include localization folder and templates' value='No' />
    </parameter>

    <parameter name='FunctionTemplate' type='choice' prompt='Include Public/Private function templates?' default='0'>
      <choice label='&amp;Yes' help='Includes function templates' value='Yes' />
      <choice label='&amp;No' help='Does not include function templates' value='No' />
    </parameter>
  </parameters>

  <content>
    <!--The file element has four available attributes; source, destination, condition & openInEditor-->
    <file source='' destination='Classes\' />
    <file source='' destination='Public\' />
    <file source='' destination='Private\' />
    <file source='' destination='Release\' />
    <file source='' destination='Docs\' />

    <!--The templateFile element allows for template expansion, and should be used for templates rather than files-->
    <templateFile condition='$PLASTER_PARAM_LocalizationTemplate -eq "Yes"' source='localizationTemplate.strings.psd1' destination='Docs\en-US\localization.strings.psd1' />
    <templateFile condition='$PLASTER_PARAM_FunctionTemplate -eq "Yes"' source='functionTemplate.ps1' destination='Public\Verb-Noun.ps1' />
    <templateFile condition='$PLASTER_PARAM_FunctionTemplate -eq "Yes"' source='functionTemplate.ps1' destination='Private\Verb-Noun.ps1' />

  </content>
</plasterManifest>
